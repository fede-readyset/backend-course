


<h2>Listado de productos</h2>

<div>    
{{#each products}}
    <div class="card">
        <div class="thumbnail-container">
            <img class="thumbnail" src="{{this.thumbnail}}" alt="Imagen de {{this.title}}">
        </div>
        <p><h3> {{this.title}}</h3></p>
        <p>{{this.description}}</p>
        <p>Stock: {{this.stock}} unidades</p>
        <p>Código: {{this.code}}</p>
        <p>Status: {{#if this.status}} Activo {{else}} Inactivo {{/if}}</p>
        <p>Categoría: {{this.category}}</p> 
        <h2 style="text-align:center">€ {{this.price}}</h2>

        <form class="addtocart-form" method="POST" action="/api/carts/662e6b814c63f2bf2601b0d5/product/{{this._id}}">
            <button type="submit" {{#unless this.status}} disabled {{/unless}} class="btn btn-primary">
                <i class="bi bi-cart-fill me-2"></i> Agregar
            </button>
        </form>

                
    </div>
{{/each}}




<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center"> 
        {{#if hasPrevPage}}
            <li class="page-item"><a class="page-link" href="/?page={{prevPage}}&limit={{limit}}">< {{prevPage}}</a></li>
        {{/if}}     

        <li class="page-item"><a class="page-link" href="#">{{currentPage}}</a></li>

        {{#if hasNextPage}}
            <li class="page-item"><a class="page-link" href="/?page={{nextPage}}&limit={{limit}}">{{nextPage}} ></a></li>
        {{/if}}
    </ul>

    <div class="text-center">
        <p>Pág. {{currentPage}} de {{totalPages}}</p>
        <form action="/" method="GET">
            <label for="limit">Ver:</label>
                <select name="limit" id="limit">
                    <option  value= "5"> 5</option>
                    <option  value="10">10</option>
                    <option  value="20">20</option>
                </select>
            <button type="submit">Ir</button>
        </form>
    </div>


  </nav>
  
  
  


<script>
    var addToCartForms = document.querySelectorAll('form.addtocart-form');

    addToCartForms.forEach(function(form) {
        form.addEventListener('submit', function(event) {
            event.preventDefault(); // Evitar que el formulario se envíe automáticamente
            var formAction = this.getAttribute('action'); // Obtener la URL de la API desde el formulario
            var formData = new FormData(this); // Obtener los datos del formulario

            // Enviar la solicitud a la API usando fetch
            fetch(formAction, {
                method: 'POST', // Método de la solicitud (por ejemplo, POST para agregar un producto)
                body: formData // Datos a enviar en la solicitud (por ejemplo, los datos del formulario)
            })
            .then(response => {
                // Verificar si la solicitud fue exitosa
                if (!response.ok) {
                    throw new Error('Hubo un problema al agregar el producto.'); // Lanzar un error si la solicitud falla
                } 
                // Si la solicitud fue exitosa, no hacemos nada aquí, ya que no queremos mostrar la respuesta al usuario
                //window.confirm("Producto agregado al carrito.");
                //console.log(`Producto agregado con exito al carrito.`);

                // Si la solicitud fue exitosa, mostrar una alerta con SweetAlert2
                Swal.fire({
                    icon: 'success',
                    title: 'Producto agregado al carrito',
                    showConfirmButton: false,
                    timer: 2000
                });

            })
            .catch(error => {
                console.error('Error:', error); // Manejar cualquier error que ocurra durante la solicitud
                // Aquí puedes realizar alguna acción adicional si lo deseas, como mostrar un mensaje de error al usuario
            });
        });
    });
</script>



</div>